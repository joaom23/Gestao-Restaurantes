// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Projeto_Lab.Data;

namespace Projeto_Lab.Migrations
{
    [DbContext(typeof(LabContext))]
    [Migration("20210704011839_update2")]
    partial class update2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Projeto_Lab.Models.Administrador", b =>
                {
                    b.Property<int>("IdA")
                        .HasColumnName("Id_A")
                        .HasColumnType("int");

                    b.Property<int?>("CriadoPor")
                        .HasColumnName("criado_por")
                        .HasColumnType("int");

                    b.HasKey("IdA");

                    b.HasIndex("CriadoPor");

                    b.ToTable("Administrador");
                });

            modelBuilder.Entity("Projeto_Lab.Models.Cliente", b =>
                {
                    b.Property<int>("IdC")
                        .HasColumnName("Id_C")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("SuspensoPor")
                        .HasColumnName("Suspenso_por")
                        .HasColumnType("int");

                    b.HasKey("IdC");

                    b.HasIndex("SuspensoPor");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("Projeto_Lab.Models.ListaFavPrato", b =>
                {
                    b.Property<int>("PratoId")
                        .HasColumnName("Prato_ID")
                        .HasColumnType("int");

                    b.Property<int>("IdCl")
                        .HasColumnName("Id_Cl")
                        .HasColumnType("int");

                    b.Property<bool?>("Notifica")
                        .HasColumnType("bit");

                    b.HasKey("PratoId");

                    b.HasIndex("IdCl");

                    b.ToTable("Lista_Fav_Pratos");
                });

            modelBuilder.Entity("Projeto_Lab.Models.ListaFavRestaurante", b =>
                {
                    b.Property<int>("IdR")
                        .HasColumnName("Id_r")
                        .HasColumnType("int");

                    b.Property<int>("IdC")
                        .HasColumnName("Id_c")
                        .HasColumnType("int");

                    b.Property<bool?>("Notifica")
                        .HasColumnType("bit");

                    b.HasKey("IdR");

                    b.HasIndex("IdC");

                    b.ToTable("Lista_Fav_Restaurantes");
                });

            modelBuilder.Entity("Projeto_Lab.Models.Notificaçao", b =>
                {
                    b.Property<int>("IdNoti")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdC")
                        .HasColumnName("Id_c")
                        .HasColumnType("int");

                    b.Property<int>("IdR")
                        .HasColumnName("Id_r")
                        .HasColumnType("int");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isRead")
                        .HasColumnType("bit");

                    b.HasKey("IdNoti");

                    b.HasIndex("IdC");

                    b.HasIndex("IdR");

                    b.ToTable("Notificaçao");
                });

            modelBuilder.Entity("Projeto_Lab.Models.Prato", b =>
                {
                    b.Property<int>("IdP")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_P")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("IdP");

                    b.ToTable("Prato");
                });

            modelBuilder.Entity("Projeto_Lab.Models.PratoDium", b =>
                {
                    b.Property<int>("IdPd")
                        .HasColumnName("Id_Pd")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataPrato")
                        .HasColumnName("Data_Prato")
                        .HasColumnType("date");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("IdR")
                        .HasColumnName("Id_R")
                        .HasColumnType("int");

                    b.Property<int>("Preco")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("IdPd");

                    b.ToTable("Prato_Dia");
                });

            modelBuilder.Entity("Projeto_Lab.Models.RestTipo", b =>
                {
                    b.Property<int>("IdR")
                        .HasColumnName("Id_R")
                        .HasColumnType("int");

                    b.Property<int>("IdTp")
                        .HasColumnName("Id_Tp")
                        .HasColumnType("int");

                    b.HasKey("IdR");

                    b.HasIndex("IdTp");

                    b.ToTable("Rest_Tipo");
                });

            modelBuilder.Entity("Projeto_Lab.Models.Restaurante", b =>
                {
                    b.Property<int>("IdR")
                        .HasColumnName("Id_R")
                        .HasColumnType("int");

                    b.Property<string>("DiaDesc")
                        .IsRequired()
                        .HasColumnName("Dia_Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<TimeSpan>("HoraAbertura")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("HoraFecho")
                        .HasColumnType("time");

                    b.Property<string>("Localizacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("RegistadoPor")
                        .HasColumnName("Registado_por")
                        .HasColumnType("int");

                    b.Property<int>("Telefone")
                        .HasColumnType("int")
                        .HasMaxLength(9);

                    b.Property<string>("TipoServico")
                        .IsRequired()
                        .HasColumnName("Tipo_Servico")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("IdR");

                    b.HasIndex("RegistadoPor");

                    b.ToTable("Restaurante");
                });

            modelBuilder.Entity("Projeto_Lab.Models.Suspenso", b =>
                {
                    b.Property<int>("IdU")
                        .HasColumnName("Id_U")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataBloqueio")
                        .HasColumnName("Data_bloqueio")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DataDesbloqueio")
                        .HasColumnName("Data_desbloqueio")
                        .HasColumnType("date");

                    b.Property<int>("IdAdm")
                        .HasColumnName("Id_Adm")
                        .HasColumnType("int");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("IdU");

                    b.HasIndex("IdAdm");

                    b.ToTable("Suspenso");
                });

            modelBuilder.Entity("Projeto_Lab.Models.TipoServico", b =>
                {
                    b.Property<int>("IdTp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Tp")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("IdTp");

                    b.ToTable("Tipo_Servico");
                });

            modelBuilder.Entity("Projeto_Lab.Models.Utilizador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Pass")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("Utilizador");
                });

            modelBuilder.Entity("Projeto_Lab.Models.Administrador", b =>
                {
                    b.HasOne("Projeto_Lab.Models.Administrador", "CriadoPorNavigation")
                        .WithMany("InverseCriadoPorNavigation")
                        .HasForeignKey("CriadoPor");

                    b.HasOne("Projeto_Lab.Models.Utilizador", "IdANavigation")
                        .WithOne("Administrador")
                        .HasForeignKey("Projeto_Lab.Models.Administrador", "IdA")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Projeto_Lab.Models.Cliente", b =>
                {
                    b.HasOne("Projeto_Lab.Models.Utilizador", "IdCNavigation")
                        .WithOne("Cliente")
                        .HasForeignKey("Projeto_Lab.Models.Cliente", "IdC")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projeto_Lab.Models.Administrador", "SuspensoPorNavigation")
                        .WithMany("Clientes")
                        .HasForeignKey("SuspensoPor");
                });

            modelBuilder.Entity("Projeto_Lab.Models.ListaFavPrato", b =>
                {
                    b.HasOne("Projeto_Lab.Models.Cliente", "IdClNavigation")
                        .WithMany("ListaFavPratos")
                        .HasForeignKey("IdCl")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projeto_Lab.Models.Prato", "Prato")
                        .WithMany("ListaFavPratos")
                        .HasForeignKey("PratoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Projeto_Lab.Models.ListaFavRestaurante", b =>
                {
                    b.HasOne("Projeto_Lab.Models.Cliente", "IdCNavigation")
                        .WithMany("ListaFavRestaurantes")
                        .HasForeignKey("IdC")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projeto_Lab.Models.Restaurante", "IdRNavigation")
                        .WithMany("ListaFavRestaurantes")
                        .HasForeignKey("IdR")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Projeto_Lab.Models.Notificaçao", b =>
                {
                    b.HasOne("Projeto_Lab.Models.Cliente", "IdCNavigation")
                        .WithMany("Notificaçaos")
                        .HasForeignKey("IdC")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projeto_Lab.Models.Restaurante", "IdRNavigation")
                        .WithMany("Notificaçaos")
                        .HasForeignKey("IdR")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Projeto_Lab.Models.PratoDium", b =>
                {
                    b.HasOne("Projeto_Lab.Models.Prato", "IdPdNavigation")
                        .WithMany("PratoDia")
                        .HasForeignKey("IdPd")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projeto_Lab.Models.Restaurante", "IdPd1")
                        .WithMany("PratoDia")
                        .HasForeignKey("IdPd")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Projeto_Lab.Models.RestTipo", b =>
                {
                    b.HasOne("Projeto_Lab.Models.Restaurante", "IdRNavigation")
                        .WithMany("RestTipos")
                        .HasForeignKey("IdR")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projeto_Lab.Models.TipoServico", "IdTpNavigation")
                        .WithMany("RestTipos")
                        .HasForeignKey("IdTp")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Projeto_Lab.Models.Restaurante", b =>
                {
                    b.HasOne("Projeto_Lab.Models.Utilizador", "IdRNavigation")
                        .WithOne("Restaurante")
                        .HasForeignKey("Projeto_Lab.Models.Restaurante", "IdR")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projeto_Lab.Models.Administrador", "RegistadoPorNavigation")
                        .WithMany("Restaurantes")
                        .HasForeignKey("RegistadoPor");
                });

            modelBuilder.Entity("Projeto_Lab.Models.Suspenso", b =>
                {
                    b.HasOne("Projeto_Lab.Models.Administrador", "IdAdmNavigation")
                        .WithMany("Suspensos")
                        .HasForeignKey("IdAdm")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projeto_Lab.Models.Utilizador", "IdUNavigation")
                        .WithMany("Suspensos")
                        .HasForeignKey("IdU")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
